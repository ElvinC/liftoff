{"version":3,"sources":["../src/scene.js"],"names":["Scene","canvasId","canvas","document","getElementById","height","$","window","width","canvasSize","Vec2","_self","resize","set","ctx","getContext","camera","pos","zoom","clearRect","sprite","drawMe","newPos","sub","multiply","add","divide","color","fillStyle","fill","lineWidth","strokeStyle","stroke","closePath","setTransform","radius","posVec","Vec","toVector","calculateCoords","beginPath","arc","x","y","Math","PI","fillAndClose","rotation","offset","newWidth","newHeight","translate","rotate","scaledOffset","rect","theVector","circle","newStart","newStop","moveTo","lineTo"],"mappings":"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","sourcesContent":["import { Vector2D as Vec2, Vector as Vec } from './vector';\n\nexport class Scene {\n    constructor(canvasId) {\n        this.canvas = document.getElementById(canvasId);\n        // set initial size\n        this.canvas.height = $(window).height();\n        this.canvas.width = $(window).width();\n        this.canvasSize = new Vec2(this.canvas.width, this.canvas.height);\n\n        const _self = this;\n        // automatic resize\n        $(window).resize(() => {\n            _self.canvas.height = $(window).height();\n            _self.canvas.width = $(window).width();\n            _self.canvasSize.set(_self.canvas.width, _self.canvas.height);\n        });\n\n        this.ctx = this.canvas.getContext('2d');\n\n        this.camera = {\n            pos: new Vec2(0, 0),\n            zoom: 1,\n        };\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    drawSprite(sprite) {\n        sprite.drawMe(this);\n    }\n\n    /**\n     * Convert to scene coordinates\n     * @param {Vec2} pos coordinates\n     * @returns {Vec2}\n     */\n    calculateCoords(pos) { // calculate coordinates based on camera position\n        let newPos = pos.sub(this.camera.pos).multiply(this.camera.zoom);\n        newPos = newPos.add(this.canvasSize.divide(2));\n        return newPos;\n    }\n\n    fillAndClose(color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fill();\n        this.ctx.lineWidth = 2;\n        this.ctx.strokeStyle = '#555';\n        this.ctx.stroke();\n        this.ctx.closePath();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n\n    // Draw a circle with the given position, radius and color\n    circle(pos, radius, color = '#000000') {\n        // console.log(pos instanceof Vec2)\n        const posVec = Vec.toVector(pos);\n        const newPos = this.calculateCoords(posVec);\n\n        this.ctx.beginPath();\n        this.ctx.arc(newPos.x, newPos.y, radius * this.camera.zoom, 0, 2 * Math.PI, false);\n        this.fillAndClose(color);\n    }\n\n    /**\n     * Draw a rectangle\n     * @param {Vec2} pos Position\n     * @param {Number} width Width of rectangle\n     * @param {Number} height Height of rectangle\n     * @param {Number} rotation Angle\n     * @param {String} color Hex color\n     * @param {Vec2} offset Drawing offset\n     */\n    rect(pos, width, height, rotation = 0, color = '#000000', offset) {\n        const newPos = this.calculateCoords(pos);\n\n        const newWidth = width * this.camera.zoom;\n        const newHeight = height * this.camera.zoom;\n\n\n        this.ctx.beginPath();\n        this.ctx.translate(newPos.x, newPos.y);\n        this.ctx.rotate(rotation);\n\n        if (offset) { // with offset\n            const scaledOffset = offset.multiply(this.camera.zoom);\n            this.ctx.rect(-newWidth / 2 + scaledOffset.x, -newHeight / 2 + scaledOffset.y, newWidth, newHeight);\n        } else {\n            this.ctx.rect(-newWidth / 2, -newHeight / 2, newWidth, newHeight);\n        }\n\n        this.fillAndClose(color);\n    }\n\n    /**\n     * Draws a vector\n     * @param {Vec2} pos start of vector\n     * @param {Vec2} theVector\n     */\n    drawVector(pos, theVector) {\n        // draw a dot, center of mass.\n        this.circle(pos, 1, '#000000');\n        const newStart = this.calculateCoords(pos);\n        const newStop = this.calculateCoords(Vec.add(pos, theVector));\n\n        this.ctx.beginPath();\n        this.ctx.moveTo(newStart.x, newStart.y);\n        this.ctx.lineTo(newStop.x, newStop.y);\n        this.ctx.lineWidth = 1;\n        this.ctx.strokeStyle = '#555';\n        this.ctx.stroke();\n    }\n}\n"],"file":"scene.js"}