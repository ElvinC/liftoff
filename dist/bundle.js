/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/script.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/img/earth.png":
/*!***************************!*\
  !*** ./src/img/earth.png ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"images/earth.png\";\n\n//# sourceURL=webpack:///./src/img/earth.png?");

/***/ }),

/***/ "./src/js/Shapes/ellipticalOrbit.js":
/*!******************************************!*\
  !*** ./src/js/Shapes/ellipticalOrbit.js ***!
  \******************************************/
/*! exports provided: ellipticalOrbit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ellipticalOrbit\", function() { return ellipticalOrbit; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/js/vector.js\");\n/* harmony import */ var _physics_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../physics/constants */ \"./src/js/physics/constants.js\");\n\n // import { Scene } from '../scene';\n\n/**\n * Draw an elliptical orbit\n * @param {*} bodyA Object with pos, mass and velocity, in motion\n * @param {*} bodyB Object with pos and mass, not in motion\n * @param {Scene} scene Scene to draw the orbit\n * @param {Boolean} drawOrbit Draw orbit on scene\n * @param {Number} opacity Opacity of drawn orbit\n */\n\nfunction ellipticalOrbit(bodyA, bodyB, scene, drawOrbit) {\n  var opacity = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.25;\n  // body A is in motion, body B is stationary\n  // calculate useful values\n  var GMb = bodyB.stdGravParam || bodyB.mass * _physics_constants__WEBPACK_IMPORTED_MODULE_1__[\"GRAVITATIONAL_CONSTANT\"]; // vector from B to A\n\n  var rVec = bodyA.pos.sub(bodyB.pos);\n  var rLen = rVec.length(); // orbital velocity vector, relative velocity\n\n  var orbVel = bodyA.vel.sub(bodyB.vel);\n  var velSqrd = orbVel.lengthSquared();\n  var rDotVel = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].dot(rVec, orbVel); // find eccentricity vector, https://en.wikipedia.org/wiki/Eccentricity_vector\n\n  var eccVec = rVec.multiply(velSqrd / GMb - 1 / rLen); // eccVec = eccVec.sub(orbVel.multiply(Vec.dot(rVec, orbVel) / GMb));\n\n  eccVec = eccVec.sub(orbVel.multiply(rDotVel / GMb));\n  var eccentricity = eccVec.length(); // find angular momentum https://en.wikipedia.org/wiki/Angular_momentum\n\n  var RPerpA = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].perp(rVec, orbVel); // const horizontalVel = RPerpA / rLen;\n  // const angularVel = RPerpA / (rLen ** 2);\n  // const angularMomentum = (rLen ** 2) * angularVel\n\n  var angularMomentum = RPerpA * bodyA.mass; // find true anomaly https://en.wikipedia.org/wiki/True_anomaly\n\n  var eccDotR = eccVec.dot(rVec);\n  var trueAnomaly = Math.acos(eccDotR / (eccentricity * rLen));\n\n  if (rDotVel < 0) {\n    trueAnomaly = 2 * Math.PI - trueAnomaly;\n  } // find distance between apoapsis and periapsis.\n  // angularMomentum^2/(m^2 y) https://en.wikipedia.org/wiki/Orbit_equation\n\n\n  var constantTerm = Math.pow(angularMomentum, 2) / (GMb * Math.pow(bodyA.mass, 2));\n  var periapsis = constantTerm / (1 + eccentricity);\n  var apoapsis = constantTerm / (1 - eccentricity); // find semi-major and semi-minor axes https://en.wikipedia.org/wiki/Semi-major_and_semi-minor_axes\n\n  var semiMajorAxis = (periapsis + apoapsis) / 2;\n  var semiMinorAxis = semiMajorAxis * Math.sqrt(1 - Math.pow(eccentricity, 2)); // add distance from foci to center (e * semiMajorAxis = linear eccentricity)\n\n  var linearEccVec = eccVec.multiply(-semiMajorAxis);\n  var centerOfEllipse = bodyB.pos.add(linearEccVec); // find coordinates for periapsis and apoapsis\n\n  var semiMajorAxisVec = eccVec.multiply(semiMajorAxis / eccentricity);\n  var periapsisPos = centerOfEllipse.add(semiMajorAxisVec);\n  var apoapsisPos = centerOfEllipse.sub(semiMajorAxisVec);\n\n  if (drawOrbit) {\n    scene.ellipse({\n      pos: centerOfEllipse,\n      radX: semiMajorAxis,\n      radY: semiMinorAxis,\n      rotation: eccVec.angle(),\n      fill: false,\n      stroke: true,\n      strokeColor: \"rgba(255, 255, 255, \".concat(opacity, \")\")\n    }); // draw periapsis\n\n    if (eccentricity < 1) {\n      var dotSize = Math.min(6 / scene.camera.zoom, 50000);\n      scene.circle(periapsisPos, dotSize, '#ff777799');\n      scene.circle(apoapsisPos, dotSize, '#7777ff99');\n    }\n  }\n\n  return {\n    trueAnomaly: trueAnomaly,\n    eccentricity: eccentricity,\n    periapsis: periapsis,\n    apoapsis: apoapsis\n  };\n}\n\n//# sourceURL=webpack:///./src/js/Shapes/ellipticalOrbit.js?");

/***/ }),

/***/ "./src/js/physics/atmosphere.js":
/*!**************************************!*\
  !*** ./src/js/physics/atmosphere.js ***!
  \**************************************/
/*! exports provided: ISA */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ISA\", function() { return ISA; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/js/physics/constants.js\");\n\nvar RSpecificAir = 287.058;\nvar heatCapacityRatio = 1.4; // https://en.wikipedia.org/wiki/International_Standard_Atmosphere\n\nvar layers = [{\n  layer: 0,\n  name: 'Troposphere',\n  baseGeopotential: -610,\n  baseGeometric: -611,\n  lapse: +6.5,\n  baseTemperature: +19.0,\n  basePressure: 108900,\n  baseDensity: 1.2985\n}, {\n  layer: 1,\n  name: 'Tropopause',\n  baseGeopotential: 11000,\n  baseGeometric: 11019,\n  lapse: 0.0,\n  baseTemperature: -56.5,\n  basePressure: 22632,\n  baseDensity: 0.3639\n}, {\n  layer: 2,\n  name: 'Stratosphere',\n  baseGeopotential: 20000,\n  baseGeometric: 20063,\n  lapse: -1.0,\n  baseTemperature: -56.5,\n  basePressure: 5474.9,\n  baseDensity: 0.088\n}, {\n  layer: 3,\n  name: 'Stratosphere',\n  baseGeopotential: 32000,\n  baseGeometric: 32162,\n  lapse: -2.8,\n  baseTemperature: -44.5,\n  basePressure: 868.02,\n  baseDensity: 0.0132\n}, {\n  layer: 4,\n  name: 'Stratopause',\n  baseGeopotential: 47000,\n  baseGeometric: 47350,\n  lapse: 0.0,\n  baseTemperature: -2.5,\n  basePressure: 110.91,\n  baseDensity: 0.002\n}, {\n  layer: 5,\n  name: 'Mesosphere',\n  baseGeopotential: 51000,\n  baseGeometric: 51413,\n  lapse: +2.8,\n  baseTemperature: -2.5,\n  basePressure: 66.939,\n  baseDensity: 0.00086\n}, {\n  layer: 6,\n  name: 'Mesosphere',\n  baseGeopotential: 71000,\n  baseGeometric: 71802,\n  lapse: +2.0,\n  baseTemperature: -58.5,\n  basePressure: 3.9564,\n  baseDensity: 0.000064\n}, {\n  layer: 7,\n  name: 'Mesopause',\n  baseGeopotential: 84852,\n  baseGeometric: 86000,\n  lapse: 0,\n  baseTemperature: -86.28,\n  basePressure: 0.3734,\n  baseDensity: 0.00000696\n}];\n\nfunction celsiusToKelvin(temperature) {\n  return temperature + 273.15;\n}\n\nfunction getTemperature(layer, height) {\n  var bT = celsiusToKelvin(layer.baseTemperature);\n  var a = layer.lapse / 1000;\n  var deltaHeight = height - layer.baseGeometric;\n  var temperature = bT - deltaHeight * a;\n  return temperature;\n}\n\nfunction getPressureNoLapse(layer, height) {\n  // https://en.wikipedia.org/wiki/Barometric_formula\n  var l = layer;\n  var bT = celsiusToKelvin(l.baseTemperature);\n  var eqExponent = -_constants__WEBPACK_IMPORTED_MODULE_0__[\"STANDARD_GRAVITY\"] * (height - l.baseGeometric) / (bT * RSpecificAir);\n  var pressure = l.basePressure * Math.exp(eqExponent);\n  return pressure;\n}\n\nfunction getPressure(layer, temperature) {\n  var l = layer;\n  var lapse = l.lapse / 1000;\n  var bT = celsiusToKelvin(l.baseTemperature); // P = Pl * (T/Tl)^(-g0/a*R)\n\n  var eqExponent = _constants__WEBPACK_IMPORTED_MODULE_0__[\"STANDARD_GRAVITY\"] / (lapse * RSpecificAir);\n  var pressure = l.basePressure * Math.pow(temperature / bT, eqExponent);\n  return pressure;\n}\n\nfunction getLayer(height) {\n  // find atmospheric layer\n  for (var i = 1; i < layers.length; i++) {\n    if (height < layers[i].baseGeometric) {\n      return layers[i - 1];\n    }\n  }\n\n  return null;\n}\n\nfunction speedOfSound(temperature) {\n  return Math.sqrt(heatCapacityRatio * RSpecificAir * temperature);\n}\n\nfunction ISA(altitude) {\n  if (altitude > 86000 || altitude < -611) {\n    return {\n      temperature: 0,\n      pressure: 0,\n      density: 0,\n      soundSpeed: 0\n    };\n  }\n\n  var layer = getLayer(altitude);\n  var temperature = getTemperature(layer, altitude);\n  var pressure = 0;\n\n  if (layer.lapse === 0) {\n    pressure = getPressureNoLapse(layer, altitude);\n  } else {\n    pressure = getPressure(layer, temperature);\n  }\n\n  var density = pressure / (RSpecificAir * temperature);\n  var soundSpeed = speedOfSound(temperature);\n  return {\n    temperature: temperature,\n    pressure: pressure,\n    density: density,\n    soundSpeed: soundSpeed\n  };\n}\n\n//# sourceURL=webpack:///./src/js/physics/atmosphere.js?");

/***/ }),

/***/ "./src/js/physics/constants.js":
/*!*************************************!*\
  !*** ./src/js/physics/constants.js ***!
  \*************************************/
/*! exports provided: GRAVITATIONAL_CONSTANT, STANDARD_GRAVITY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GRAVITATIONAL_CONSTANT\", function() { return GRAVITATIONAL_CONSTANT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STANDARD_GRAVITY\", function() { return STANDARD_GRAVITY; });\nvar GRAVITATIONAL_CONSTANT = 6.67408e-11;\nvar STANDARD_GRAVITY = 9.80665;\n\n//# sourceURL=webpack:///./src/js/physics/constants.js?");

/***/ }),

/***/ "./src/js/rocketParts/engine.js":
/*!**************************************!*\
  !*** ./src/js/rocketParts/engine.js ***!
  \**************************************/
/*! exports provided: Engine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Engine\", function() { return Engine; });\n/* harmony import */ var _physics_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../physics/constants */ \"./src/js/physics/constants.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // import { FuelTank } from './fuelTank';\n\nvar Engine =\n/*#__PURE__*/\nfunction () {\n  function Engine(mass, Isp, maxThrust, minThrust) {\n    var numEngines = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var fuelTank = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    var infiniteFuel = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var gimbalAngle = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n\n    _classCallCheck(this, Engine);\n\n    this.mass = mass * numEngines;\n    this.Isp = Isp;\n    this.maxThrust = maxThrust * numEngines;\n    this.minThrust = minThrust * numEngines;\n    this.gimbalAngle = gimbalAngle;\n    this.infiniteFuel = infiniteFuel;\n    this.thrust = 0;\n    this.thrustChange = 0;\n    this.throttleRate = this.maxThrust * 2; // amount per second\n\n    this.deltaV = 0; // fuel tank\n\n    this.fuelTank = fuelTank; // calculate exhaust velocity\n\n    this.Ve = Isp * _physics_constants__WEBPACK_IMPORTED_MODULE_0__[\"STANDARD_GRAVITY\"];\n  }\n  /**\n   * Set the current throttle\n   * @param {Number} amount amount of throttle in Newtons\n   */\n\n\n  _createClass(Engine, [{\n    key: \"setThrottle\",\n    value: function setThrottle(amount) {\n      // if zero, keep at zero\n      if (this.thrust !== 0 || this.minThrust === 0) {\n        this.thrust = Math.min(this.maxThrust, Math.max(this.minThrust, amount));\n      } // if engine is off, start at minThrust. If at min and throttling down, go to 0.\n\n\n      if (this.thrust === 0 && this.thrustChange > 0) {\n        this.thrust = this.minThrust;\n      } else if (this.thrust === this.minThrust && this.thrustChange < 0) {\n        this.thrust = 0;\n      }\n    }\n    /**\n     * Begin throttle up\n     */\n\n  }, {\n    key: \"beginThrottleUp\",\n    value: function beginThrottleUp() {\n      this.thrustChange = this.throttleRate;\n    }\n    /**\n     * Begin throttle down\n     */\n\n  }, {\n    key: \"beginThrottleDown\",\n    value: function beginThrottleDown() {\n      this.thrustChange = -this.throttleRate;\n    }\n    /**\n     * Stop throttling\n     */\n\n  }, {\n    key: \"throttleStop\",\n    value: function throttleStop() {\n      this.thrustChange = 0;\n    }\n    /**\n     * Returns the current mass flow rate\n     */\n\n  }, {\n    key: \"getMdot\",\n    value: function getMdot() {\n      return this.thrust / this.Ve;\n    }\n    /**\n     * Update parameters\n     * @param {Number} dt Timestep in seconds\n     */\n\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame(dt) {\n      this.setThrottle(this.thrust + this.thrustChange * dt); // consume fuel\n\n      if (!this.infiniteFuel) {\n        this.fuelTank.fuel -= this.getMdot() * dt;\n        this.deltaV = this.Ve * Math.log((this.fuelTank.fuel + this.fuelTank.dryMass) / this.fuelTank.dryMass);\n      }\n    }\n    /**\n     * Returns the current thrust.\n     * @param {Number} dt The timestep in seconds\n     */\n\n  }, {\n    key: \"getThrustAndUpdateFuel\",\n    value: function getThrustAndUpdateFuel(dt) {\n      if (this.fuelTank.fuel <= 0) {\n        this.thrust = 0;\n        return 0;\n      } // update thrust and consume fuel\n\n\n      this.simulateFrame(dt);\n      return this.thrust;\n    }\n  }]);\n\n  return Engine;\n}();\n\n//# sourceURL=webpack:///./src/js/rocketParts/engine.js?");

/***/ }),

/***/ "./src/js/rocketParts/fuelTank.js":
/*!****************************************!*\
  !*** ./src/js/rocketParts/fuelTank.js ***!
  \****************************************/
/*! exports provided: FuelTank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FuelTank\", function() { return FuelTank; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FuelTank = function FuelTank(wetMass, dryMass) {\n  _classCallCheck(this, FuelTank);\n\n  this.wetMass = wetMass;\n  this.dryMass = dryMass;\n  this.fuel = wetMass - dryMass;\n};\n\n//# sourceURL=webpack:///./src/js/rocketParts/fuelTank.js?");

/***/ }),

/***/ "./src/js/rocketParts/rocket.js":
/*!**************************************!*\
  !*** ./src/js/rocketParts/rocket.js ***!
  \**************************************/
/*! exports provided: Rocket */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rocket\", function() { return Rocket; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/js/vector.js\");\n/* harmony import */ var _Shapes_ellipticalOrbit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Shapes/ellipticalOrbit */ \"./src/js/Shapes/ellipticalOrbit.js\");\n/* harmony import */ var _physics_atmosphere__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../physics/atmosphere */ \"./src/js/physics/atmosphere.js\");\n/* harmony import */ var _stage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stage */ \"./src/js/rocketParts/stage.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n // import { Scene } from '../scene';\n\nvar Rocket =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @param {Vec2} pos Starting position\n   * @param {Vec2} vel Starting velocity\n   * @param {Number} mass mass\n   * @param {Number} angle angle in radians\n   * @param {Array} planetList a list of planets\n   */\n  function Rocket(pos, vel, mass, angle, planetList, engine) {\n    var _this = this;\n\n    _classCallCheck(this, Rocket);\n\n    // dynamics\n    this.pos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].toVector(pos);\n    this.vel = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].toVector(vel);\n    this.acc = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n    this.dynPressure = 0; // parameters\n\n    this.mass = mass;\n    this.angle = angle;\n    this.angularVel = 0;\n    this.angularAcc = 0;\n    this.orbitalParams = {\n      trueAnomaly: 0,\n      eccentricity: 0,\n      periapsis: 0,\n      apoapsis: 0\n    };\n    this.engine = engine;\n    this.rocketHeight = 71;\n    this.rocketWidth = 3.66; // main planet\n\n    this.planetList = planetList; // settings\n\n    this.dragCoefficient = 0.04; // not based on anything\n\n    this.spacePressed = false;\n\n    var _self = this;\n\n    $(window).keydown(function (e) {\n      switch (e.which) {\n        // left/right\n        case 37:\n          _self.angularAcc = -0.2;\n          break;\n\n        case 39:\n          _self.angularAcc = 0.2;\n          break;\n        // up/down\n\n        case 38:\n          _self.engine.beginThrottleUp();\n\n          break;\n\n        case 40:\n          _self.engine.beginThrottleDown();\n\n          break;\n\n        case 32:\n          if (!_this.spacePressed) {\n            _this.spacePressed = true;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n    $(window).keyup(function (e) {\n      switch (e.which) {\n        // left/right\n        case 37:\n          _self.angularAcc = 0;\n          break;\n\n        case 39:\n          _self.angularAcc = 0;\n          break;\n        // up/down\n\n        case 38:\n          _self.engine.throttleStop();\n\n          break;\n\n        case 40:\n          _self.engine.throttleStop();\n\n          break;\n\n        case 32:\n          _this.spacePressed = false;\n\n        default:\n          break;\n      }\n    });\n  }\n  /**\n   *\n   * @param {Scene} scene Scene to draw the shape\n   */\n\n\n  _createClass(Rocket, [{\n    key: \"drawMe\",\n    value: function drawMe(scene) {\n      var planet = this.planetList[0]; // DRAW PREDICTED PATH\n\n      var drawOrbit = scene.camera.zoom < 0.5;\n      this.orbitalParams = Object(_Shapes_ellipticalOrbit__WEBPACK_IMPORTED_MODULE_1__[\"ellipticalOrbit\"])(this, planet, scene, drawOrbit); // Draw fire first\n\n      var randAngle = (Math.random() - 0.5) * 0.01;\n      var fireLength = this.engine.thrust / this.engine.maxThrust * 40 - 0.5 * Math.random();\n      var fireOffset = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](-(this.rocketHeight / 2) - fireLength / 2, 0);\n      scene.ctx.shadowColor = '#fd753d';\n      scene.ctx.shadowBlur = 40;\n      scene.rect(this.pos, fireLength, 2.5, this.angle + randAngle, '#fd753daa', fireOffset);\n      randAngle = (Math.random() - 0.5) * 0.005;\n      fireLength = this.engine.thrust / this.engine.maxThrust * 25 - 0.1 * Math.random();\n      fireOffset = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](-(this.rocketHeight / 2) - fireLength / 2, 0);\n      scene.ctx.shadowColor = '#ffd976';\n      scene.rect(this.pos, fireLength, 1.5, this.angle + randAngle, '#ffe99699', fireOffset);\n      scene.ctx.shadowColor = \"transparent\";\n      scene.ctx.shadowBlur = 0; // draw rocket body\n\n      scene.rect(this.pos, this.rocketHeight, this.rocketWidth, this.angle, '#ffffff', null, false);\n      scene.rect(this.pos, 7.2, this.rocketWidth, this.angle, '#444444', new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](this.rocketHeight / 5, 0), false);\n      scene.circle(this.pos, this.rocketWidth / 2, '#ffffff', this.angle, new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](this.rocketHeight / 2, 0)); // draw velocity vector\n\n      if (scene.camera.zoom < 1.5) {\n        // if zoomed out\n        scene.drawVector(this.pos, this.vel, 2, 0.5 / scene.camera.zoom);\n        scene.circle(this.pos, 2 / scene.camera.zoom, '#ffffff');\n      } else {\n        scene.drawVector(this.pos, this.vel, 0.2, 0.25);\n      }\n    }\n    /**\n     * Simulate next timestep\n     * @param {Number} dt The simulation timestep\n     */\n\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame(dt) {\n      var planet = this.planetList[0];\n      var rVec = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].sub(this.pos, planet.pos); // from planet to rocket\n\n      var rLenSqrd = rVec.lengthSquared();\n      var rVecUnit = rVec.unit(); // update current mass\n\n      this.mass = this.engine.mass + this.engine.fuelTank.fuel + this.engine.fuelTank.dryMass;\n\n      if (rLenSqrd < Math.pow(planet.radius, 2)) {\n        // collision with planet\n        var velLength = this.vel.length();\n\n        if (velLength > 4) {\n          // show crash\n          $('#crash').html(\"CRASHED AT \".concat(Math.round(velLength), \" m/s\"));\n          window.setTimeout(function () {\n            $('#crash').html('');\n          }, 5000);\n        }\n\n        var restitution = this.vel.lengthSquared() < 3 ? 0.0 : 0.3;\n        var changeVel = rVecUnit.multiply((1 + restitution) * Math.abs(rVecUnit.dot(this.vel)));\n        this.vel.addInPlace(changeVel); // find delta and move to prevent intersect\n\n        var rVecToSurface = rVecUnit.multiply(planet.radius);\n        var deltaToSurface = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].sub(rVecToSurface, rVec).multiply(1.1);\n        this.pos.addInPlace(deltaToSurface);\n      } // update angle using velocity verlet\n\n\n      this.angle += this.angularVel * dt + 0.5 * this.angularAcc * Math.pow(dt, 2);\n      this.angle = this.angle % (2 * Math.PI); // wrap around\n\n      this.angularVel += this.angularAcc * dt;\n      this.angularVel *= Math.max(1 - 0.5 * dt, 0); // dampening\n      // Update thrust\n\n      var thrust = this.engine.getThrustAndUpdateFuel(dt); // FORCES\n\n      var sumForces = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0); // Thrust force\n\n      var thrustForce = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].unit(this.angle, thrust); // In the radial direction\n\n      sumForces.addInPlace(thrustForce); // add thrust force\n      // drag\n\n      var velUnit = this.vel.unit();\n      var altitude = Math.sqrt(rLenSqrd) - planet.radius;\n      var ISAData = Object(_physics_atmosphere__WEBPACK_IMPORTED_MODULE_2__[\"ISA\"])(altitude); // 1/2 rho v^2 Cd in opposite direction\n\n      var dynPressure = 0.5 * ISAData.density * this.vel.lengthSquared();\n      this.dynPressure = dynPressure;\n      var drag = -dynPressure * this.dragCoefficient;\n      var dragVec = velUnit.multiply(drag);\n      sumForces.addInPlace(dragVec); // gravity\n\n      var GMPlanet = planet.stdGravParam || this.gConstant * planet.mass;\n      var gravity = rVecUnit.multiply(-this.mass * GMPlanet / rLenSqrd);\n      sumForces.addInPlace(gravity); // update position and velocity using velocity verlet\n      // new acceleration\n\n      var newAcc = sumForces.divide(this.mass);\n      this.acc = newAcc;\n      this.pos.addInPlace(_vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(this.vel.multiply(dt), newAcc.multiply(0.5 * Math.pow(dt, 2))));\n      this.vel.addInPlace(newAcc.multiply(dt)); // update velocity\n    }\n  }]);\n\n  return Rocket;\n}();\n\n//# sourceURL=webpack:///./src/js/rocketParts/rocket.js?");

/***/ }),

/***/ "./src/js/rocketParts/rocketPresets.js":
/*!*********************************************!*\
  !*** ./src/js/rocketParts/rocketPresets.js ***!
  \*********************************************/
/*! exports provided: enginePresets, fuelTankPresets, engineFromPreset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enginePresets\", function() { return enginePresets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fuelTankPresets\", function() { return fuelTankPresets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"engineFromPreset\", function() { return engineFromPreset; });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./src/js/rocketParts/engine.js\");\n/* harmony import */ var _fuelTank__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fuelTank */ \"./src/js/rocketParts/fuelTank.js\");\n\n\nvar enginePresets = {\n  NoEngine: {\n    Isp: 0,\n    maxThrust: 1,\n    minThrust: 0,\n    mass: 0,\n    fireLength: 0\n  },\n  merlin1D: {\n    Isp: 282,\n    maxThrust: 845000,\n    minThrust: 345000,\n    mass: 0,\n    fireLength: 40\n  },\n  Merlin1DVac: {\n    Isp: 348,\n    maxThrust: 934000,\n    minThrust: 334000,\n    mass: 0,\n    fireLength: 10\n  },\n  SuperDraco: {\n    Isp: 235,\n    maxThrust: 71000,\n    minThrust: 14200,\n    mass: 0,\n    fireLength: 1\n  },\n  Rutherford: {\n    Isp: 303,\n    maxThrust: 192000,\n    minThrust: 92000,\n    mass: 0\n  },\n  RocketdyneF1: {\n    Isp: 263,\n    maxThrust: 6770000,\n    minThrust: 677000,\n    mass: 0\n  },\n  Raptor: {\n    Isp: 350,\n    maxThrust: 1993000,\n    minThrust: 199300\n  }\n};\nvar fuelTankPresets = {\n  f9stage1: {\n    dryMass: 22200,\n    wetMass: 433100,\n    height: 42.6,\n    width: 3.66\n  },\n  f9stage2: {\n    dryMass: 4000,\n    wetMass: 111500,\n    height: 12.6,\n    width: 3.66\n  },\n  Electron: {\n    dryMass: 1250,\n    wetMass: 12500,\n    height: 17,\n    width: 1.2\n  },\n  SaturnV: {\n    dryMass: 2970000 - 2160000,\n    wetMass: 2970000\n  },\n  f9Fairing: {\n    dryMass: 2500,\n    wetMass: 2500,\n    height: 13,\n    width: 5.2\n  },\n  DragonTrunk: {\n    dryMass: 800,\n    wetMass: 800,\n    height: 3,\n    width: 3.77\n  },\n  Dragon: {\n    dryMass: 4200 + 6000 - 1900,\n    wetMass: 4200 + 6000,\n    height: 3.1,\n    width: 3.77,\n    cap: true\n  },\n  SaturnVStage1: {\n    dryMass: 131000,\n    wetMass: 2280000,\n    height: 42,\n    width: 10\n  }\n};\nfunction engineFromPreset(engineName, fuelTankName, numEngines) {\n  var infiniteFuel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var eng = enginePresets[engineName];\n  var fuelConf = fuelTankPresets[fuelTankName];\n\n  if (eng === undefined || fuelConf === undefined) {\n    return false;\n  }\n\n  var fuelTank = new _fuelTank__WEBPACK_IMPORTED_MODULE_1__[\"FuelTank\"](fuelConf.wetMass, fuelConf.dryMass);\n  var engine = new _engine__WEBPACK_IMPORTED_MODULE_0__[\"Engine\"](eng.mass, eng.Isp, eng.maxThrust, eng.minThrust, numEngines, fuelTank, infiniteFuel);\n  return engine;\n}\n\n//# sourceURL=webpack:///./src/js/rocketParts/rocketPresets.js?");

/***/ }),

/***/ "./src/js/rocketParts/stage.js":
/*!*************************************!*\
  !*** ./src/js/rocketParts/stage.js ***!
  \*************************************/
/*! exports provided: Stage, stageFromPreset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stage\", function() { return Stage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stageFromPreset\", function() { return stageFromPreset; });\n/* harmony import */ var _rocketPresets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rocketPresets */ \"./src/js/rocketParts/rocketPresets.js\");\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./engine */ \"./src/js/rocketParts/engine.js\");\n/* harmony import */ var _fuelTank__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fuelTank */ \"./src/js/rocketParts/fuelTank.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vector */ \"./src/js/vector.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Stage =\n/*#__PURE__*/\nfunction () {\n  function Stage(engine, numEngines, fuelTank, numFueltanks) {\n    var _ref = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},\n        _ref$height = _ref.height,\n        height = _ref$height === void 0 ? 71 : _ref$height,\n        _ref$width = _ref.width,\n        width = _ref$width === void 0 ? 3.66 : _ref$width,\n        _ref$fireLength = _ref.fireLength,\n        fireLength = _ref$fireLength === void 0 ? 40 : _ref$fireLength,\n        _ref$fireWidth = _ref.fireWidth,\n        fireWidth = _ref$fireWidth === void 0 ? width * 0.8 : _ref$fireWidth,\n        _ref$hasCap = _ref.hasCap,\n        hasCap = _ref$hasCap === void 0 ? false : _ref$hasCap,\n        _ref$color = _ref.color,\n        color = _ref$color === void 0 ? \"#ffffff\" : _ref$color;\n\n    _classCallCheck(this, Stage);\n\n    this.engine = engine;\n    this.numEngines = numEngines;\n    this.fuelTank = fuelTank;\n    this.numFueltanks = numFueltanks;\n    this.height = height;\n    this.width = width;\n    this.fireLength = fireLength;\n    this.fireWidth = fireWidth;\n    this.hasCap = hasCap;\n    this.color = color;\n    this.deltaV = 0;\n  }\n\n  _createClass(Stage, [{\n    key: \"getIsp\",\n    value: function getIsp() {}\n  }, {\n    key: \"drawMe\",\n    value: function drawMe(pos, angle, scene, offset) {\n      var drawFire = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var fireAmount = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n      // Draw fire first\n      if (drawFire) {\n        // use shadow as \"glow\"\n        scene.setShadow('#fd753d', 40);\n        var randAngle = (Math.random() - 0.5) * 0.01;\n        var newFireLength = fireAmount * this.fireLength - 0.5 * Math.random();\n        var fireOffset = new _vector__WEBPACK_IMPORTED_MODULE_3__[\"Vec2\"](-(this.height / 2) - newFireLength / 2, 0);\n        scene.rect(pos, newFireLength, this.fireWidth, angle + randAngle, '#fd753daa', fireOffset);\n        scene.setShadow('#ffd976', 40);\n        randAngle = (Math.random() - 0.5) * 0.005;\n        newFireLength = fireAmount * this.fireLength * 0.8 - 0.1 * Math.random();\n        fireOffset = new _vector__WEBPACK_IMPORTED_MODULE_3__[\"Vec2\"](-(this.height / 2) - newFireLength / 2, 0);\n        scene.rect(pos, newFireLength, this.fireWidth * 0.7, angle + randAngle, '#ffe99699', fireOffset); // stop shadow\n\n        scene.setShadow();\n      } // draw cap\n\n\n      if (this.hasCap) {\n        var rectOffset = offset.sub(new _vector__WEBPACK_IMPORTED_MODULE_3__[\"Vec2\"](this.width / 4, 0));\n        var capOffset = offset.add(new _vector__WEBPACK_IMPORTED_MODULE_3__[\"Vec2\"]((this.height - this.width) / 2, 0)); // subtract radius of circle from height\n\n        scene.rect(pos, this.height - this.width / 2, this.width, angle, this.color, rectOffset, false);\n        scene.circle(pos, this.width / 2, this.color, angle, capOffset, 3 / 2 * Math.PI, Math.PI / 2);\n      } else {\n        // draw rocket body\n        scene.rect(pos, this.height, this.width, angle, this.color, offset, false);\n      }\n    }\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame(dt) {\n      this.engine.setThrottle(this.engine.thrust + this.engine.thrustChange * dt);\n\n      if (!this.engine.infiniteFuel) {\n        this.fuelTank.fuel -= this.engine.getMdot() * dt;\n      }\n    }\n  }, {\n    key: \"getThrustAndUpdateFuel\",\n    value: function getThrustAndUpdateFuel(dt) {\n      if (this.fuelTank.fuel <= 0) {\n        this.engine.thrust = 0;\n        return 0;\n      } // update thrust and consume fuel\n\n\n      this.simulateFrame(dt);\n      return this.engine.thrust;\n    }\n  }]);\n\n  return Stage;\n}();\nfunction stageFromPreset(EngineName, numEngines, fuelTankName) {\n  var numFueltanks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var eng = _rocketPresets__WEBPACK_IMPORTED_MODULE_0__[\"enginePresets\"][EngineName];\n  var fuelConf = _rocketPresets__WEBPACK_IMPORTED_MODULE_0__[\"fuelTankPresets\"][fuelTankName];\n\n  if (eng === undefined || fuelConf === undefined) {\n    return false;\n  }\n\n  var cap = Boolean(fuelConf.cap);\n  var engine = new _engine__WEBPACK_IMPORTED_MODULE_1__[\"Engine\"](eng.mass, eng.Isp, eng.maxThrust, eng.minThrust, numEngines);\n  var fuelTank = new _fuelTank__WEBPACK_IMPORTED_MODULE_2__[\"FuelTank\"](fuelConf.wetMass, fuelConf.dryMass);\n  var newStage = new Stage(engine, numEngines, fuelTank, numFueltanks, {\n    height: fuelConf.height,\n    width: fuelConf.width,\n    fireLength: eng.fireLength,\n    hasCap: cap\n  });\n  return newStage;\n}\n\n//# sourceURL=webpack:///./src/js/rocketParts/stage.js?");

/***/ }),

/***/ "./src/js/rocketParts/stagedRocket.js":
/*!********************************************!*\
  !*** ./src/js/rocketParts/stagedRocket.js ***!
  \********************************************/
/*! exports provided: StagedRocket */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StagedRocket\", function() { return StagedRocket; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/js/vector.js\");\n/* harmony import */ var _Shapes_ellipticalOrbit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Shapes/ellipticalOrbit */ \"./src/js/Shapes/ellipticalOrbit.js\");\n/* harmony import */ var _physics_atmosphere__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../physics/atmosphere */ \"./src/js/physics/atmosphere.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar StagedRocket =\n/*#__PURE__*/\nfunction () {\n  function StagedRocket(pos, vel, angle, stageList, planetList) {\n    var isParent = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    var canvasId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'canvas';\n\n    _classCallCheck(this, StagedRocket);\n\n    this.pos = pos;\n    this.vel = vel;\n    this.angle = angle;\n    this.acc = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n    this.stages = stageList;\n    this.focusId = 0; // 0 is itself, 1, 2.. for dropped stages\n\n    this.droppedStages = [];\n    this.planetList = planetList;\n    this.machNumber = 0;\n    this.canvasSelector = \"#\".concat(canvasId); // focus on rocket, user can control it\n\n    this.focus = isParent;\n    this.isParent = isParent;\n    this.mass = 1;\n    this.dynPressure = 0; // parameters\n\n    this.angle = angle;\n    this.angularVel = 0;\n    this.angularAcc = 0;\n    this.orbitalParams = {\n      trueAnomaly: 0,\n      eccentricity: 0,\n      periapsis: 0,\n      apoapsis: 0\n    }; // settings\n\n    this.dragCoefficient = 0.15; // not based on anything\n\n    this.supersonicDrag = 0.4;\n    this.drag = 0;\n    this.spacePressed = false;\n\n    var _self = this;\n\n    if (this.isParent) {\n      $(window).keydown(function (e) {\n        if ($(':focus').length === 0) {\n          switch (e.which) {\n            case 67:\n              _self.changeFocus();\n\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n\n    $(window).keydown(function (e) {\n      if (_self.focus && $(':focus').length === 0) {\n        switch (e.which) {\n          // left/right\n          case 37:\n            _self.angularAcc = -0.2;\n            break;\n\n          case 39:\n            _self.angularAcc = 0.2;\n            break;\n          // up/down\n\n          case 38:\n            _self.stages[0].engine.beginThrottleUp();\n\n            break;\n\n          case 40:\n            _self.stages[0].engine.beginThrottleDown();\n\n            break;\n\n          case 32:\n            if (!_self.spacePressed) {\n              _self.spacePressed = true;\n\n              _self.seperateStage();\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    });\n    $(window).keyup(function (e) {\n      if (_self.focus && $(':focus').length === 0) {\n        switch (e.which) {\n          // left/right\n          case 37:\n            _self.angularAcc = 0;\n            break;\n\n          case 39:\n            _self.angularAcc = 0;\n            break;\n          // up/down\n\n          case 38:\n            _self.stages[0].engine.throttleStop();\n\n            break;\n\n          case 40:\n            _self.stages[0].engine.throttleStop();\n\n            break;\n\n          case 32:\n            _self.spacePressed = false;\n            break;\n\n          default:\n            break;\n        }\n      }\n    });\n  }\n\n  _createClass(StagedRocket, [{\n    key: \"getFocusStage\",\n    value: function getFocusStage() {\n      if (this.focus) {\n        return this;\n      }\n\n      for (var i = 0; i < this.droppedStages.length; i++) {\n        if (this.droppedStages[i].focus) {\n          return this.droppedStages[i];\n        }\n      }\n\n      return new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n    }\n  }, {\n    key: \"changeFocus\",\n    value: function changeFocus() {\n      if (this.isParent) {\n        var numDropped = this.droppedStages.length;\n\n        if (numDropped === 0) {\n          // no dropped stages\n          return;\n        }\n\n        if (this.focus) {\n          this.focus = false;\n        } else {\n          this.droppedStages[this.focusId - 1].focus = false;\n        }\n\n        this.focusId = (this.focusId + 1) % (this.droppedStages.length + 1);\n\n        if (this.focusId === 0) {\n          this.focus = true;\n        } else {\n          this.droppedStages[this.focusId - 1].focus = true;\n        }\n      }\n    }\n  }, {\n    key: \"calculateRefArea\",\n    value: function calculateRefArea() {\n      // approximate with cylinder\n      // get area seen from side\n      var totalSideArea = 0;\n      var maxWidth = 0;\n\n      for (var i = 0; i < this.stages.length; i++) {\n        totalSideArea += this.stages[i].height * this.stages[i].width;\n\n        if (this.stages[i].width > maxWidth) {\n          maxWidth = this.stages[i].width;\n        }\n      } // get cap area from maximum width\n\n\n      var capArea = Math.pow(maxWidth, 2) * Math.PI / 4; // find angle of attack\n      // convert angle from 0, 2pi to -pi, pi\n\n      var newAngle = this.angle > Math.PI ? this.angle - 2 * Math.PI : this.angle; // calculate angle of attack\n\n      var angleOfAttack = newAngle - this.vel.angle();\n\n      if (angleOfAttack > Math.PI) {\n        angleOfAttack -= 2 * Math.PI;\n      } else if (angleOfAttack > Math.PI) {\n        angleOfAttack += 2 * Math.PI;\n      } // calculate reference area, side\n\n\n      var refArea = Math.abs(totalSideArea * Math.sin(angleOfAttack)); // \"caps\"\n\n      refArea += Math.abs(capArea * Math.cos(angleOfAttack));\n      return refArea;\n    }\n  }, {\n    key: \"resetDynamics\",\n    value: function resetDynamics() {\n      this.vel = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n      this.angle = -Math.PI / 2;\n      this.angularVel = 0;\n    }\n  }, {\n    key: \"updateMass\",\n    value: function updateMass() {\n      var newMass = 0;\n\n      for (var i = 0; i < this.stages.length; i++) {\n        newMass += this.stages[i].engine.mass;\n        newMass += this.stages[i].fuelTank.fuel;\n        newMass += this.stages[i].fuelTank.dryMass;\n      }\n\n      this.mass = newMass;\n    }\n  }, {\n    key: \"seperateStage\",\n    value: function seperateStage() {\n      if (this.stages.length >= 2) {\n        var droppedStage = this.stages[0]; // how much to move\n\n        var shiftAmount = (droppedStage.height + this.stages[1].height) / 2;\n        this.stages.shift(); // remove current stage\n\n        var nPos = this.pos.copy();\n        var nVel = this.vel.add(_vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].unit(this.angle, -2)); // push it a little\n\n        var newStageObject = new StagedRocket(nPos, nVel, this.angle, [droppedStage], this.planetList, false);\n        this.droppedStages.push(newStageObject);\n        this.pos.addInPlace(_vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].unit(this.angle, shiftAmount));\n      } else {\n        // parachute\n        this.dragCoefficient = Math.min(7000, this.dragCoefficient * 5);\n      }\n    }\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame(dt) {\n      var planet = this.planetList[0];\n      var rVec = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].sub(this.pos, planet.pos); // from planet to rocket\n\n      var rLenSqrd = rVec.lengthSquared();\n      var rVecUnit = rVec.unit();\n      var velLength = this.vel.length();\n      this.updateMass();\n\n      if (rLenSqrd < Math.pow(planet.radius, 2)) {\n        // collision with planet\n        if (velLength > 5 && this.focus) {\n          // show crash\n          $('#crash').html(\"CRASHED AT \".concat(Math.round(velLength), \" m/s\"));\n          window.setTimeout(function () {\n            $('#crash').html('');\n          }, 5000);\n        }\n\n        var restitution = this.vel.lengthSquared() < 3 ? 0.0 : 0.3;\n        var changeVel = rVecUnit.multiply((1 + restitution) * Math.abs(rVecUnit.dot(this.vel)));\n        this.vel.addInPlace(changeVel); // find delta and move to prevent intersect\n\n        var rVecToSurface = rVecUnit.multiply(planet.radius);\n        var deltaToSurface = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].sub(rVecToSurface, rVec).multiply(1.1);\n        this.pos.addInPlace(deltaToSurface);\n      } // update angle using velocity verlet\n\n\n      this.angle += this.angularVel * dt + 0.5 * this.angularAcc * Math.pow(dt, 2);\n      this.angle = this.angle % (2 * Math.PI); // wrap around\n\n      if (this.angle < 0) {\n        this.angle += 2 * Math.PI;\n      }\n\n      this.angularVel += this.angularAcc * dt;\n      this.angularVel *= Math.max(1 - 0.5 * dt, 0); // dampening\n      // Update thrust\n\n      var thrust = this.stages[0].getThrustAndUpdateFuel(dt); // FORCES\n\n      var sumForces = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0); // Thrust force\n\n      var thrustForce = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].unit(this.angle, thrust); // In the radial direction\n\n      sumForces.addInPlace(thrustForce); // add thrust force\n      // drag\n\n      var velUnit = this.vel.unit();\n      var altitude = Math.sqrt(rLenSqrd) - planet.radius;\n\n      if (altitude < 100000) {\n        var ISAData = Object(_physics_atmosphere__WEBPACK_IMPORTED_MODULE_2__[\"ISA\"])(altitude); // 1/2 rho v^2 Cd in opposite direction\n\n        var dynPressure = 0.5 * ISAData.density * this.vel.lengthSquared();\n        this.dynPressure = dynPressure;\n        var localSpeedOfSound = ISAData.soundSpeed === 0 ? 343 : ISAData.soundSpeed;\n        this.machNumber = velLength / localSpeedOfSound; // simple & inaccurate supersonic drag modelling\n\n        var newCd = this.machNumber > 1 ? this.supersonicDrag : this.dragCoefficient;\n        var drag = -dynPressure * newCd * this.calculateRefArea();\n        this.drag = -drag;\n        var dragVec = velUnit.multiply(drag);\n        sumForces.addInPlace(dragVec);\n      } else {\n        this.machNumber = velLength / 343;\n      } // gravity\n\n\n      var GMPlanet = planet.stdGravParam || this.gConstant * planet.mass;\n      var gravity = rVecUnit.multiply(-this.mass * GMPlanet / rLenSqrd);\n      sumForces.addInPlace(gravity); // update position and velocity using velocity verlet\n      // new acceleration\n\n      var newAcc = sumForces.divide(this.mass);\n      this.acc = newAcc;\n      this.pos.addInPlace(_vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(this.vel.multiply(dt), newAcc.multiply(0.5 * Math.pow(dt, 2))));\n      this.vel.addInPlace(newAcc.multiply(dt)); // update velocity\n      // simulate the dropped stages\n\n      for (var i = 0; i < this.droppedStages.length; i++) {\n        this.droppedStages[i].simulateFrame(dt);\n      }\n    }\n  }, {\n    key: \"drawMe\",\n    value: function drawMe(scene) {\n      var planet = this.planetList[0]; // DRAW PREDICTED PATH\n\n      var drawOrbit = scene.camera.zoom < 0.5;\n      var orbitOpacity = this.focus ? 0.25 : 0.1;\n      this.orbitalParams = Object(_Shapes_ellipticalOrbit__WEBPACK_IMPORTED_MODULE_1__[\"ellipticalOrbit\"])(this, planet, scene, drawOrbit, orbitOpacity); // let offset = new Vec2(0, 0);\n\n      var offset = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0); // offset based on dynamic pressure\n\n      var shakePos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(this.pos, _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].unit(Math.random() * 2 * Math.PI, 0.0003 * Math.sqrt(this.dynPressure))); // let sumHeight = 0;\n\n      var maxWidth = 0;\n\n      for (var i = 0; i < this.stages.length; i++) {\n        var stage = this.stages[i];\n\n        if (i === 0) {\n          var fireAmount = stage.engine.thrust / stage.engine.maxThrust;\n          stage.drawMe(shakePos, this.angle, scene, offset, true, fireAmount);\n        } else {\n          stage.drawMe(shakePos, this.angle, scene, offset, false);\n        } // sumHeight += stage.height;\n\n\n        maxWidth = Math.max(maxWidth, stage.width);\n\n        if (i < this.stages.length - 1) {\n          offset.x += (stage.height + this.stages[i + 1].height) / 2;\n        }\n      } // draw dropped stages\n\n\n      for (var _i = 0; _i < this.droppedStages.length; _i++) {\n        this.droppedStages[_i].drawMe(scene);\n      }\n      /*\n      var grd = scene.ctx.createLinearGradient(0, 0, 170, 0);\n      grd.addColorStop(0, \"rgba(200, 100, 100, 0.6)\");\n      grd.addColorStop(1, \"rgba(200, 100, 100, 0)\");\n       let glowOffset = new Vec2((sumHeight - this.stages[0].height) / 2, 0);\n      let glowHeight = sumHeight + 2;\n      let glowWidth = maxWidth + 2;\n      scene.rect(this.pos, glowHeight, glowWidth, this.angle, grd, glowOffset, false, true);\n      */\n      // draw velocity vector\n\n\n      if (scene.camera.zoom < 1.5) {\n        // if zoomed out\n        var vectorColor = this.focus ? '#ffffff' : '#ffffff55';\n        scene.drawVector(this.pos, this.vel, 2 / scene.camera.zoom, 0.05 / scene.camera.zoom, vectorColor);\n        scene.circle(this.pos, 2 / scene.camera.zoom, vectorColor);\n      } else {\n        scene.drawVector(this.pos, this.vel, 0.3, 0.1, '#ff5722');\n      }\n    }\n  }, {\n    key: \"getDeltaV\",\n    value: function getDeltaV() {\n      var totalMass = this.mass;\n      var currentStage = this.stages[0]; // find mass, when current tank is empty;\n\n      var dryMass = totalMass - currentStage.fuelTank.fuel;\n      var deltaV = currentStage.engine.Ve * Math.log(totalMass / dryMass);\n      return deltaV;\n    }\n  }]);\n\n  return StagedRocket;\n}();\n\n//# sourceURL=webpack:///./src/js/rocketParts/stagedRocket.js?");

/***/ }),

/***/ "./src/js/rocketParts/stagelist.js":
/*!*****************************************!*\
  !*** ./src/js/rocketParts/stagelist.js ***!
  \*****************************************/
/*! exports provided: stageListFromString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stageListFromString\", function() { return stageListFromString; });\n/* harmony import */ var _stage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stage */ \"./src/js/rocketParts/stage.js\");\n\nfunction stageListFromString(stageListString) {\n  var newStageList = [];\n  var lines = stageListString.split('\\n');\n\n  try {\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i]; // remove spaces before/after\n\n      line = line.replace(/^\\s+|\\s+$/g, '');\n\n      if (line[0] !== '#') {\n        // not a comment\n        var splitLine = line.split(' ');\n\n        if (splitLine.length !== 3) {\n          alert(\"Wrong number of parameters in line \".concat(i));\n          return false;\n        }\n\n        var nameEng = splitLine[0];\n        var numEng = parseInt(splitLine[1], 10);\n        var nameTank = splitLine[2]; // const numTank = parseInt(splitLine[3], 10);\n\n        if (Number.isNaN(numEng)) {\n          //  || isNaN(numTank)\n          alert(\"Can't parse number in line \".concat(i));\n          return false;\n        }\n\n        var newStage = Object(_stage__WEBPACK_IMPORTED_MODULE_0__[\"stageFromPreset\"])(nameEng, numEng, nameTank);\n\n        if (newStage === false) {\n          alert(\"Can't generate stage, check spelling on line \".concat(i));\n          return false;\n        }\n\n        newStageList.push(newStage);\n      }\n    }\n\n    return newStageList.reverse();\n  } catch (err) {\n    console.log(\"Parse error: \".concat(String(err)));\n    return false;\n  }\n}\n\n//# sourceURL=webpack:///./src/js/rocketParts/stagelist.js?");

/***/ }),

/***/ "./src/js/scene.js":
/*!*************************!*\
  !*** ./src/js/scene.js ***!
  \*************************/
/*! exports provided: Scene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scene\", function() { return Scene; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/js/vector.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar Scene =\n/*#__PURE__*/\nfunction () {\n  function Scene(canvasId) {\n    _classCallCheck(this, Scene);\n\n    this.canvas = document.getElementById(canvasId); // set initial size\n\n    this.canvas.height = $(window).height();\n    this.canvas.width = $(window).width();\n    this.canvasSize = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](this.canvas.width, this.canvas.height);\n\n    var _self = this; // automatic resize\n\n\n    $(window).resize(function () {\n      _self.canvas.height = $(window).height();\n      _self.canvas.width = $(window).width();\n\n      _self.canvasSize.set(_self.canvas.width, _self.canvas.height);\n    });\n    this.ctx = this.canvas.getContext('2d');\n    this.camera = {\n      pos: new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0),\n      zoom: 1\n    };\n  }\n\n  _createClass(Scene, [{\n    key: \"clear\",\n    value: function clear() {\n      this.ctx.fillStyle = '#333';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height); // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }, {\n    key: \"drawSprite\",\n    value: function drawSprite(sprite) {\n      sprite.drawMe(this);\n    }\n    /**\n     * Convert to scene coordinates\n     * @param {Vec2} pos coordinates\n     * @returns {Vec2}\n     */\n\n  }, {\n    key: \"calculateCoords\",\n    value: function calculateCoords(pos) {\n      // calculate coordinates based on camera position\n      var newPos = pos.sub(this.camera.pos).multiply(this.camera.zoom);\n      newPos = newPos.add(this.canvasSize.divide(2));\n      return newPos;\n    }\n  }, {\n    key: \"fillAndClose\",\n    value: function fillAndClose(fill, color) {\n      var stroke = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var strokeColor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#555';\n      this.ctx.fillStyle = color;\n\n      if (fill) {\n        this.ctx.fill();\n      }\n\n      if (stroke) {\n        this.ctx.lineWidth = 2;\n        this.ctx.strokeStyle = strokeColor;\n        this.ctx.stroke();\n      }\n\n      this.ctx.closePath();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } // Draw a circle with the given position, radius and color\n\n  }, {\n    key: \"circle\",\n    value: function circle(pos, radius) {\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#000000';\n      var rotation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var offset = arguments.length > 4 ? arguments[4] : undefined;\n      var startRadius = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var stopRadius = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 2 * Math.PI;\n      var scaledRadius = radius * this.camera.zoom;\n\n      if (scaledRadius < 0.7) {\n        // don't render tiny primitives.\n        return;\n      }\n\n      var posVec = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].toVector(pos);\n      var newPos = this.calculateCoords(posVec);\n      this.ctx.translate(newPos.x, newPos.y);\n      this.ctx.beginPath(); // with offset\n\n      if (offset) {\n        // with offset\n        this.ctx.rotate(rotation);\n        var scaledOffset = offset.multiply(this.camera.zoom);\n        this.ctx.arc(scaledOffset.x, scaledOffset.y, scaledRadius, startRadius, stopRadius, false);\n      } else {\n        this.ctx.arc(0, 0, scaledRadius, startRadius, stopRadius, false);\n      }\n\n      this.fillAndClose(true, color);\n    }\n    /**\n     * Draw a rectangle\n     * @param {Vec2} pos Position\n     * @param {Number} width Width of rectangle\n     * @param {Number} height Height of rectangle\n     * @param {Number} rotation Angle\n     * @param {String} color Hex color\n     * @param {Vec2} offset Drawing offset\n     * @param {Boolean} stroke Draw stroke\n     */\n\n  }, {\n    key: \"rect\",\n    value: function rect(pos, width, height) {\n      var rotation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var color = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '#000000';\n      var offset = arguments.length > 5 ? arguments[5] : undefined;\n      var stroke = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      var fill = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;\n      var newPos = this.calculateCoords(pos);\n      var newWidth = width * this.camera.zoom;\n      var newHeight = height * this.camera.zoom;\n      this.ctx.beginPath();\n      this.ctx.translate(newPos.x, newPos.y);\n      this.ctx.rotate(rotation);\n\n      if (offset) {\n        // with offset\n        var scaledOffset = offset.multiply(this.camera.zoom);\n        this.ctx.rect(-newWidth / 2 + scaledOffset.x, -newHeight / 2 + scaledOffset.y, newWidth, newHeight);\n      } else {\n        this.ctx.rect(-newWidth / 2, -newHeight / 2, newWidth, newHeight);\n      }\n\n      this.fillAndClose(fill, color, stroke);\n    }\n    /**\n     * Draw a radial gradient\n     * @param {Vec2} pos position\n     * @param {Number} startRadius Start radius of gradient\n     * @param {Number} stopRadius End radius of gradient\n     * @param {Object} param Color settings\n     * @param {String} startColor Start color of gradient\n     * @param {String} stopColor Stop color of gradient\n     */\n\n  }, {\n    key: \"circleGradient\",\n    value: function circleGradient(pos, startRadius, stopRadius) {\n      var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          _ref$startColor = _ref.startColor,\n          startColor = _ref$startColor === void 0 ? 'rgba(170, 170, 255, 0.6)' : _ref$startColor,\n          _ref$stopColor = _ref.stopColor,\n          stopColor = _ref$stopColor === void 0 ? 'rgba(255, 255, 255, 0)' : _ref$stopColor;\n\n      // const newPos = this.calculateCoords(pos);\n      var newStartRadius = startRadius * this.camera.zoom;\n      var newStopRadius = stopRadius * this.camera.zoom;\n      var grd = this.ctx.createRadialGradient(0, 0, newStartRadius, 0, 0, newStopRadius);\n      grd.addColorStop(0, startColor);\n      grd.addColorStop(1, stopColor);\n      this.circle(pos, stopRadius, grd);\n    }\n    /**\n     * Change context shadow settings\n     * @param {String} color the color of the blur\n     * @param {Number} blur The blur size\n     */\n\n  }, {\n    key: \"setShadow\",\n    value: function setShadow() {\n      var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transparent';\n      var blur = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.ctx.shadowColor = color;\n      this.ctx.shadowBlur = blur;\n    }\n    /**\n     * Generate an ellipse\n     * @param {Object} conf The settings\n     * @param {Vec2} conf.pos Position vector\n     * @param {Number} conf.radX Minor radius\n     * @param {Number} conf.ranY Major radius\n     * @param {Number} conf.rotation Rotation in radians\n     * @param {String} conf.color Color of the ellipse\n     * @param {Number} conf.startAngle Starting angle in radians\n     * @param {Number} conf.endAngle Ending angle in radians\n     * @param {Vec2} conf.offset offset vector\n     * @param {Boolean} stroke add outline\n     */\n\n  }, {\n    key: \"ellipse\",\n    value: function ellipse() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          pos = _ref2.pos,\n          _ref2$radX = _ref2.radX,\n          radX = _ref2$radX === void 0 ? 5 : _ref2$radX,\n          _ref2$radY = _ref2.radY,\n          radY = _ref2$radY === void 0 ? 2 : _ref2$radY,\n          _ref2$rotation = _ref2.rotation,\n          rotation = _ref2$rotation === void 0 ? 0 : _ref2$rotation,\n          _ref2$color = _ref2.color,\n          color = _ref2$color === void 0 ? '#000000' : _ref2$color,\n          _ref2$startAngle = _ref2.startAngle,\n          startAngle = _ref2$startAngle === void 0 ? 0 : _ref2$startAngle,\n          _ref2$endAngle = _ref2.endAngle,\n          endAngle = _ref2$endAngle === void 0 ? 2 * Math.PI : _ref2$endAngle,\n          offset = _ref2.offset,\n          _ref2$stroke = _ref2.stroke,\n          stroke = _ref2$stroke === void 0 ? false : _ref2$stroke,\n          _ref2$strokeColor = _ref2.strokeColor,\n          strokeColor = _ref2$strokeColor === void 0 ? '#000000' : _ref2$strokeColor,\n          _ref2$fill = _ref2.fill,\n          fill = _ref2$fill === void 0 ? true : _ref2$fill;\n\n      var newPos = this.calculateCoords(pos);\n      var newRadX = radX * this.camera.zoom;\n      var newRadY = radY * this.camera.zoom;\n      this.ctx.beginPath();\n      this.ctx.translate(newPos.x, newPos.y); // this.ctx.rotate(rotation);\n\n      if (offset) {\n        // with offset\n        var newOffset = offset.multiply(this.camera.zoom);\n        this.ctx.ellipse(newOffset.x, newOffset.x, newRadX, newRadY, rotation, startAngle, endAngle);\n      } else {\n        this.ctx.ellipse(0, 0, newRadX, newRadY, rotation, startAngle, endAngle);\n      }\n\n      this.fillAndClose(fill, color, stroke, strokeColor);\n    }\n    /**\n     * Draws a vector\n     * @param {Vec2} pos start of vector\n     * @param {Vec2} theVector\n     */\n\n  }, {\n    key: \"drawVector\",\n    value: function drawVector(pos, theVector) {\n      var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n      var length = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      var color = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '#ffffff';\n      // draw a dot, center of mass.\n      this.circle(pos, width * 1.5, color);\n      var newStart = this.calculateCoords(pos);\n      var vecEnd = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(pos, theVector.multiply(length));\n      var newStop = this.calculateCoords(vecEnd);\n      this.ctx.beginPath();\n      this.ctx.moveTo(newStart.x, newStart.y);\n      this.ctx.lineTo(newStop.x, newStop.y);\n      this.ctx.lineWidth = width * this.camera.zoom;\n      this.ctx.strokeStyle = color;\n      this.ctx.stroke();\n      this.circle(vecEnd, width * 0.6, color);\n    }\n  }]);\n\n  return Scene;\n}();\n\n//# sourceURL=webpack:///./src/js/scene.js?");

/***/ }),

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/js/vector.js\");\n/* harmony import */ var _scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scene */ \"./src/js/scene.js\");\n/* harmony import */ var _shapes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shapes */ \"./src/js/shapes.js\");\n/* harmony import */ var _sprites_planet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sprites/planet */ \"./src/js/sprites/planet.js\");\n/* harmony import */ var _rocketParts_rocket__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rocketParts/rocket */ \"./src/js/rocketParts/rocket.js\");\n/* harmony import */ var _rocketParts_rocketPresets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rocketParts/rocketPresets */ \"./src/js/rocketParts/rocketPresets.js\");\n/* harmony import */ var _rocketParts_stagedRocket__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rocketParts/stagedRocket */ \"./src/js/rocketParts/stagedRocket.js\");\n/* harmony import */ var _rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rocketParts/stage */ \"./src/js/rocketParts/stage.js\");\n/* harmony import */ var _rocketParts_stagelist__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rocketParts/stagelist */ \"./src/js/rocketParts/stagelist.js\");\n\n\n\n\n\n\n\n\n\nwindow.stepSize = 1 / 60;\nwindow.makeStage = _rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__[\"stageFromPreset\"]; // one function for requesting animation frame\n\nwindow.requestAnimFrame = function animationFrame()\n/* callback */\n{\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function nextFrameCallback(cb) {\n    window.setTimeout(cb, 1000 / 60);\n  };\n}();\n\nvar spriteList = [];\nvar trailList = [];\nvar planetList = [];\nvar scene = null;\nvar mainRocket = null;\nvar counter = 0;\nvar clock = 0; // const floor = null;\n// main physics loop\n\nfunction update() {\n  counter += 1;\n\n  if (counter % 15 === 0) {\n    trailList.push(new _shapes__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"](mainRocket.pos.x, mainRocket.pos.y, 0.5, '#ffffff77', 0, 0));\n    trailList[1].color = '#ffffff11';\n    trailList[2].color = '#ffffff22';\n    trailList[3].color = '#ffffff33';\n    trailList[4].color = '#ffffff44';\n    trailList[5].color = '#ffffff55';\n    trailList[6].color = '#ffffff66';\n    trailList.shift();\n  }\n\n  for (var i = 0; i < spriteList.length; i++) {\n    spriteList[i].simulateFrame(window.stepSize);\n  } // increment time counter\n\n\n  clock += window.stepSize; // move camera towards stage in focus\n\n  var cameraSmooth = Math.min(0.04 + mainRocket.vel.length() / 600, 1);\n  var Delta = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].sub(mainRocket.getFocusStage().pos, scene.camera.pos);\n  scene.camera.pos.addInPlace(Delta.multiply(cameraSmooth));\n}\n\nsetInterval(update, window.stepSize * 1000);\n\nfunction draw(currentTime) {\n  scene.clear();\n\n  for (var i = 0; i < trailList.length; i++) {\n    trailList[i].drawMe(scene);\n  }\n\n  for (var _i = 0; _i < spriteList.length; _i++) {\n    spriteList[_i].drawMe(scene);\n  } // update info\n\n\n  var pRad = planetList[0].radius;\n  var focusStage = mainRocket.getFocusStage();\n  $('#clock').html(Math.round(clock * 10) / 10);\n  $('#speed').html(Math.round(focusStage.vel.length()));\n  $('#distance').html(Math.round((focusStage.pos.sub(planetList[0].pos).length() - planetList[0].radius) * 100) / 100);\n  $('#eccentricity').html(Math.round(focusStage.orbitalParams.eccentricity * 100) / 100);\n  $('#apoapsis').html(Math.round((focusStage.orbitalParams.apoapsis - pRad) * 100) / 100);\n  $('#periapsis').html(Math.round((focusStage.orbitalParams.periapsis - pRad) * 100) / 100);\n  $('#trueAnomaly').html(Math.round(focusStage.orbitalParams.trueAnomaly * 100) / 100);\n  $('#acceleration').html('[g] ' + Math.round(1 / 9.81 * focusStage.acc.length() * 100) / 100);\n  $('#deltaV').html(Math.round(focusStage.getDeltaV() * 100) / 100);\n  $('#fuel').html(Math.round(focusStage.stages[0].fuelTank.fuel * 100) / 100);\n  $('#dynPressure').html(Math.round(focusStage.dynPressure * 100) / 100);\n  $('#drag').html(Math.round(focusStage.drag * 100) / 100);\n  $('#mach').html(Math.round(focusStage.machNumber * 100) / 100);\n  window.requestAnimFrame(draw);\n}\n\nfunction init() {\n  scene = new _scene__WEBPACK_IMPORTED_MODULE_1__[\"Scene\"]('canvas');\n  window.scene = scene;\n  scene.camera.zoom = 8; // scene.camera.pos.set(0, -1000);\n\n  $('#simSpeed').on('input', function () {\n    window.stepSize = $('#simSpeed').val() / 60;\n  });\n  var radP = 6371000;\n\n  for (var i = 0; i < 100; i++) {\n    var randX = 100000000 * (Math.random() - 0.5);\n    var randY = 100000000 * (Math.random() - 0.5) + 6371000 + 10;\n    var newBall = new _shapes__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"](randX, randY, 100 + Math.random() * 1500000 + 100000, '#444');\n    spriteList.push(newBall);\n  }\n\n  var mainPlanet = new _sprites_planet__WEBPACK_IMPORTED_MODULE_3__[\"Planet\"](0, radP + 10, radP, '#959ef5', 100000, null, 3.986e+14);\n  spriteList.push(mainPlanet);\n  planetList.push(mainPlanet); // create a rocket\n  // const newEngine = engineFromPreset('merlin1D', 'f9stage1', 9, false);\n  //  // mass of F9FT: 549054\n  // mainRocket = new Rocket(new Vec2(0, 0), new Vec2(0, 0), 400000, -Math.PI / 2, planetList, newEngine);\n\n  var stageList = [];\n  var newStage = Object(_rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__[\"stageFromPreset\"])('merlin1D', 9, 'f9stage1', 1);\n  stageList.push(newStage);\n  var newStage2 = Object(_rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__[\"stageFromPreset\"])('Merlin1DVac', 1, 'f9stage2', 1);\n  stageList.push(newStage2);\n  var trunk = Object(_rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__[\"stageFromPreset\"])('NoEngine', 0, 'DragonTrunk', 1);\n  stageList.push(trunk);\n  var fairing = Object(_rocketParts_stage__WEBPACK_IMPORTED_MODULE_7__[\"stageFromPreset\"])('SuperDraco', 8, 'Dragon', 1);\n  stageList.push(fairing);\n  mainRocket = new _rocketParts_stagedRocket__WEBPACK_IMPORTED_MODULE_6__[\"StagedRocket\"](new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0), new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0), -Math.PI / 2, stageList, planetList, 'canvas');\n  window.rocket = mainRocket; // for debugging\n\n  spriteList.push(mainRocket);\n\n  for (var _i2 = 0; _i2 < 20; _i2++) {\n    trailList.push(new _shapes__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"](mainRocket.pos.x, mainRocket.pos.y, 0.5, '#ffffff77', 0, 0));\n  }\n\n  $(window).keydown(function (e) {\n    if (e.which === 82 && $(':focus').length === 0) {\n      // restart game\n      if (confirm('Restart game?')) {\n        var stageListString = $('#rocketConfig').val();\n        var newStageList = Object(_rocketParts_stagelist__WEBPACK_IMPORTED_MODULE_8__[\"stageListFromString\"])(stageListString);\n        console.log(newStageList);\n\n        if (newStageList !== false) {\n          // restart game\n          mainRocket.pos = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n          mainRocket.resetDynamics();\n          mainRocket.stages = newStageList;\n          mainRocket.droppedStages = [];\n        }\n      }\n    }\n  });\n  $('#canvas').bind('mousewheel', function (e) {\n    var changeAmount = Math.max(0.01, 1 + e.originalEvent.wheelDelta / 1000);\n    scene.camera.zoom *= changeAmount;\n  });\n  window.requestAnimFrame(draw);\n}\n\n$(window).ready(function () {\n  init();\n});\n\n//# sourceURL=webpack:///./src/js/script.js?");

/***/ }),

/***/ "./src/js/shapes.js":
/*!**************************!*\
  !*** ./src/js/shapes.js ***!
  \**************************/
/*! exports provided: Circle, Rectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Circle\", function() { return Circle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rectangle\", function() { return Rectangle; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/js/vector.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // import { Scene } from './scene';\n\nvar Circle =\n/*#__PURE__*/\nfunction () {\n  /**\n   *\n   * @param {Number} x\n   * @param {Number} y\n   * @param {Number} radius\n   * @param {String} color\n   * @param {Number} mass\n   * @param {Number} restitution\n   */\n  function Circle(x, y, radius) {\n    var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#000000';\n    var mass = arguments.length > 4 ? arguments[4] : undefined;\n    var restitution = arguments.length > 5 ? arguments[5] : undefined;\n\n    _classCallCheck(this, Circle);\n\n    this.color = color;\n    this.radius = radius;\n    this.pos = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](x, y);\n    this.speed = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n    this.restitution = restitution;\n    this.mass = mass;\n    this.inv_mass = 1 / mass; // change position of rectangle\n  }\n\n  _createClass(Circle, [{\n    key: \"changePos\",\n    value: function changePos(x, y) {\n      var change = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](x, y);\n      this.pos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(this.pos, change);\n    }\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame() {//\n    }\n  }, {\n    key: \"drawMe\",\n    value: function drawMe(scene) {\n      scene.circle(this.pos, this.radius, this.color);\n    }\n  }]);\n\n  return Circle;\n}();\nvar Rectangle =\n/*#__PURE__*/\nfunction () {\n  function Rectangle(x, y, width, height, rotation) {\n    var color = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '#000000';\n    var mass = arguments.length > 6 ? arguments[6] : undefined;\n    var restitution = arguments.length > 7 ? arguments[7] : undefined;\n\n    _classCallCheck(this, Rectangle);\n\n    // center i at the center of mass\n    this.color = color;\n    this.width = width;\n    this.height = height;\n    this.rotation = rotation;\n    this.pos = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](x, y);\n    this.speed = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](5, 0);\n    this.restitution = restitution;\n    this.mass = mass;\n    this.inv_mass = 1 / mass;\n  } // change position of rectangle\n\n\n  _createClass(Rectangle, [{\n    key: \"changePos\",\n    value: function changePos(x, y) {\n      var change = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](x, y);\n      this.pos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"].add(this.pos, change);\n    }\n  }, {\n    key: \"simulateFrame\",\n    value: function simulateFrame() {//\n    }\n  }, {\n    key: \"drawMe\",\n    value: function drawMe(scene) {\n      scene.rect(this.pos, this.width, this.height, this.rotation, this.color);\n    }\n  }]);\n\n  return Rectangle;\n}();\n\n//# sourceURL=webpack:///./src/js/shapes.js?");

/***/ }),

/***/ "./src/js/sprites/planet.js":
/*!**********************************!*\
  !*** ./src/js/sprites/planet.js ***!
  \**********************************/
/*! exports provided: Planet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Planet\", function() { return Planet; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/js/vector.js\");\n/* harmony import */ var _img_earth_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../img/earth.png */ \"./src/img/earth.png\");\n/* harmony import */ var _img_earth_png__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_img_earth_png__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Planet =\n/*#__PURE__*/\nfunction () {\n  function Planet(x, y, radius) {\n    var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#000000';\n    var atmosHeight = arguments.length > 4 ? arguments[4] : undefined;\n    var mass = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    var stdGravParam = arguments.length > 6 ? arguments[6] : undefined;\n\n    _classCallCheck(this, Planet);\n\n    this.color = color;\n    this.radius = radius;\n    this.atmStart = radius;\n    this.atmEnd = radius + atmosHeight;\n    this.pos = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](x, y);\n    this.vel = new _vector__WEBPACK_IMPORTED_MODULE_0__[\"Vec2\"](0, 0);\n    this.mass = mass;\n    this.inv_mass = 1 / mass; // G * m\n\n    this.stdGravParam = stdGravParam;\n    this.imgReady = false;\n    this.img = document.createElement('img');\n    this.img.src = _img_earth_png__WEBPACK_IMPORTED_MODULE_1___default.a;\n\n    var _self = this;\n\n    this.img.onload = function () {\n      _self.imgReady = true;\n    };\n  }\n\n  _createClass(Planet, [{\n    key: \"simulateFrame\",\n    value: function simulateFrame(dt) {\n      this.pos.addInPlace(this.vel.multiply(dt));\n    }\n    /**\n     * Draws sprite on given scene\n     * @param {Scene} scene the scene to draw the sprite\n     */\n\n  }, {\n    key: \"drawMe\",\n    value: function drawMe(scene) {\n      // draw atmosphere first\n      scene.circleGradient(this.pos, this.atmStart, this.atmEnd, {\n        startColor: 'rgba(170, 170, 255, 0.6)',\n        stopColor: 'rgba(100, 100, 200, 0)'\n      }); // if zoomed in, draw rectangle instead to prevent floating point bugs\n\n      if (scene.camera.zoom * this.radius > 5000000) {\n        var rectSize = this.radius / 320; // vec from center of planet to camera\n\n        var rVecCam = scene.camera.pos.sub(this.pos);\n        var rVecRect = rVecCam.unit(this.radius - rectSize / 2);\n        var rectPos = this.pos.add(rVecRect);\n        scene.rect(rectPos, rectSize, rectSize, rVecRect.angle(), this.color);\n      } else {\n        scene.circle(this.pos, this.radius, this.color);\n        scene.circle(this.pos, this.radius / 200, '#00000099');\n        var newPos = scene.calculateCoords(this.pos);\n\n        if (this.imgReady) {\n          scene.ctx.drawImage(this.img, newPos.x - this.radius * scene.camera.zoom, newPos.y - this.radius * scene.camera.zoom, 2 * this.radius * scene.camera.zoom, 2 * this.radius * scene.camera.zoom);\n        }\n      }\n    }\n  }]);\n\n  return Planet;\n}();\n\n//# sourceURL=webpack:///./src/js/sprites/planet.js?");

/***/ }),

/***/ "./src/js/vector.js":
/*!**************************!*\
  !*** ./src/js/vector.js ***!
  \**************************/
/*! exports provided: Vec2, Vector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vec2\", function() { return Vec2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector\", function() { return Vector; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Vec2 =\n/*#__PURE__*/\nfunction () {\n  function Vec2(x, y) {\n    _classCallCheck(this, Vec2);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vec2, [{\n    key: \"set\",\n    value: function set(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    /**\n     * @returns {Vec2}\n     */\n\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2)); // return Math.hypot(this.x, this.y); // slightly slower in chrome\n    }\n    /**\n     * Unit vector in the same direction\n     * @param {Number} length\n     * @returns {Vec2}\n     */\n\n  }, {\n    key: \"unit\",\n    value: function unit() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var vecLength = this.length();\n\n      if (vecLength === 0) {\n        // no length, return vector with angle 0\n        return new Vec2(1 * length, 0);\n      }\n\n      return this.multiply(length / vecLength);\n    }\n    /**\n     * vector division\n     * @returns {Vec2}\n     */\n\n  }, {\n    key: \"divide\",\n    value: function divide(d) {\n      return new Vec2(this.x / d, this.y / d);\n    } // vector multiplication\n\n  }, {\n    key: \"multiply\",\n    value: function multiply(m) {\n      return new Vec2(this.x * m, this.y * m);\n    }\n  }, {\n    key: \"add\",\n    value: function add(b) {\n      return new Vec2(this.x + b.x, this.y + b.y);\n    }\n    /**\n     * Add another vector in place.\n     * @param {Vec2} b Another vector\n     */\n\n  }, {\n    key: \"addInPlace\",\n    value: function addInPlace(b) {\n      this.x += b.x;\n      this.y += b.y;\n    } // this - vector b\n\n  }, {\n    key: \"sub\",\n    value: function sub(b) {\n      return new Vec2(this.x - b.x, this.y - b.y);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(b) {\n      return this.x * b.x + this.y * b.y;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle() {\n      return Math.atan2(this.y, this.x);\n    }\n  }, {\n    key: \"containsNaN\",\n    value: function containsNaN() {\n      return Number.isNaN(this.x) || Number.isNaN(this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Vec2(this.x, this.y);\n    }\n  }]);\n\n  return Vec2;\n}();\nvar Vector = {\n  add: function add(a, b) {\n    return new Vec2(a.x + b.x, a.y + b.y);\n  },\n  sub: function sub(a, b) {\n    return new Vec2(a.x - b.x, a.y - b.y);\n  },\n  dot: function dot(a, b) {\n    return a.x * b.x + a.y * b.y;\n  },\n  toVector: function toVector(obj) {\n    if (obj instanceof Vec2) {\n      return obj;\n    }\n\n    return new Vec2(obj[0], obj[1]);\n  },\n\n  /**\n   * Generate a unit vector\n   * @param {Number} angle In radians\n   * @param {Number} length Length of vector\n   */\n  unit: function unit(angle) {\n    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return new Vec2(length * Math.cos(angle), length * Math.sin(angle));\n  },\n\n  /**\n   * Area of parallelogram spanned by a and b.\n   * Equal to z-component of cross product in 3d.\n   * @param {Vector2} a First vector\n   * @param {Vector2} b Second vector\n   */\n  perp: function perp(a, b) {\n    // TODO\n    return a.x * b.y - a.y * b.x;\n  }\n};\n\n//# sourceURL=webpack:///./src/js/vector.js?");

/***/ })

/******/ });